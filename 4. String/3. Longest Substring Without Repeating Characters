class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> hash;
        int result = 0;
        for(int i=0;i<s.size();i++){
            int count=0;
            int j=i;
            while(1){
                if(j==s.size()){
                    break;
                }
                if(hash.count(s[j])>0){
                    hash.clear();
                    break;
                }else{
                    hash[s[j]]=1;
                    count++;
                }
                j++;
            }
            result = max(result, count);
        }
        return result;
    }
};


O(n)->striver explaination

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int length=0;
        int curr_length=0;
        unordered_map<char, int> hash;
        int l=0,r=0;
        for(int i=0;i<s.size();i++){
            if(hash.count(s[i])>0){
                if(l<hash[s[i]]+1)l=hash[s[i]]+1;
                hash[s[i]]=i;
            }else{
                hash[s[i]]=i;
            }
            curr_length=i-l+1;
            length=max(length, curr_length);
        }
        return length;
    }
};
